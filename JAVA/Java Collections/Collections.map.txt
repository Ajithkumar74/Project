Map Interface:
A Map contain values on the basis of key .Each key and value pair is known as an entry.A map contains unique keys.A Map contains unique keys.

A Map is useful if you have to search, update or delete elements on the basis of a key.

Hashmap:
HashMap contains values based on the keys.
Java HashMap contains only unique keys.
Java HashMap may have one null key and multiple null values.
Java HashMap is non synchronized.
Java HashMap maintains no order.

Java LinkedHashMap contains values based on the key.
Java LinkedHashMap contains unique elements.
Java LinkedHashMap may have one null key and multiple null values.
Java LinkedHashMap is non synchronized.
Java LinkedHashMap maintains insertion order.

Java TreeMap contains values based on the key. It implements the NavigableMap interface and extends AbstractMap class.
Java TreeMap contains only unique elements.
Java TreeMap cannot have a null key but can have multiple null values.
Java TreeMap is non synchronized.
Java TreeMap maintains ascending order.

Java Hashtable class implements a hashtable, which maps keys to values. It inherits Dictionary class and implements the Map interface.


A Hashtable is an array of a list. Each list is known as a bucket. The position of the bucket is identified by calling the hashcode() method. A Hashtable contains values based on the key.
Java Hashtable class contains unique elements.
Java Hashtable class doesn't allow null key or value.
Java Hashtable class is synchronized.

Hashmap:
1.HashMap is non synchronized. It is not-thread safe and can't be shared between many threads without proper synchronization code.
2.HashMap allows one null key and multiple null values.
3) HashMap is a new class introduced in JDK 1.2.
4) HashMap is fast.		
6) HashMap is traversed by Iterator.	
7) Iterator in HashMap is fail-fast.
8) HashMap inherits AbstractMap class.		